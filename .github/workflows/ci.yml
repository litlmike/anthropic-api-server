name: Build and Push to GHCR

# Simple trigger - only on main branch pushes
on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggering

# Global Environment Variables
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_METADATA_SHORT_SHA_LENGTH: 7  # Set SHA length for consistency

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Required permissions for GHCR access
    permissions:
      contents: read      # Read repository contents
      packages: write     # Write to GitHub Container Registry
      id-token: write     # Required for attestations

    steps:
      # Step 1: Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Login to GitHub Container Registry
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Generate metadata and tags
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Creates date-SHA format: 2025.09.05-sha-fc4ac4f (using Context7 pattern)
            # This format is immutable and QNAP-friendly
            type=sha,prefix={{date 'YYYY.MM.DD'}}-
          
          # Flavor configuration - prevents :latest tag creation
          flavor: |
            latest=false  # Explicitly disable :latest tag to avoid QNAP caching issues

      # Step 5: Build and push Docker image
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
          # Optional: Add for better performance
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Step 6: Debug and display deployment information
      - name: Debug metadata outputs
        run: |
          echo "🔍 Debugging metadata outputs:"
          echo "All tags: ${{ steps.meta.outputs.tags }}"
          echo "All labels: ${{ steps.meta.outputs.labels }}"
          echo "JSON output: ${{ steps.meta.outputs.json }}"
          echo "Current date: $(date '+%Y.%m.%d')"
          echo "GitHub SHA: ${{ github.sha }}"
          echo "Short SHA: ${{ github.sha:0:7 }}"

      # Step 7: Display deployment information
      - name: Show tag for QNAP deployment
        run: |
          echo "🚀 Image built and pushed!"
          echo "📋 Copy this tag for your docker-compose.yml:"
          echo "${{ steps.meta.outputs.tags }}"
          echo ""
          echo "::notice title=QNAP Deployment Tag::${{ steps.meta.outputs.tags }}"
          echo ""
          echo "## 🚀 QNAP Deployment Ready!" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tag:** \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Update your qnap-container-station.yml with the tag above" >> $GITHUB_STEP_SUMMARY
          echo "2. Import the updated YAML file in QNAP Container Station" >> $GITHUB_STEP_SUMMARY
